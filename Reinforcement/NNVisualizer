import tkinter as tk
from collections import namedtuple


class DraggableCircle:
    def __init__(self, canvas, x, y, radius):
        self.canvas = canvas
        self.radius = radius
        self.circle = canvas.create_oval(x - radius, y - radius, x + radius, y + radius, fill='blue')
        
        # Bind mouse events
        self.canvas.tag_bind(self.circle, '<ButtonPress-1>', self.on_click)
        self.canvas.tag_bind(self.circle, '<B1-Motion>', self.on_drag)

    def on_click(self, event):
        """Store the initial position when the circle is clicked."""
        self.last_x = event.x
        self.last_y = event.y

    def on_drag(self, event):
        """Move the circle to the new position."""
        dx = event.x - self.last_x
        dy = event.y - self.last_y
        self.canvas.move(self.circle, dx, dy)
        self.last_x = event.x
        self.last_y = event.y

def draw_circle(canvas, x, y, radius):
    """Draw a circle on the given canvas."""
    canvas.create_oval(x - radius, y - radius, x + radius, y + radius, fill='blue')

class ConstCircle:
    def __init__(self, canvas, focus, node):
        self.canvas = canvas
        self.focus = focus
        self.node = node

    def ConnectNode(self):
        self.canvas.create_line(self.focus.x,self.focus.y,self.node.x,self.node.y,fill='blue',width=2)
    
    def Activate(self):
        pass
    

def draw_Line(canvas, x1, y1, x2, y2):
    canvas.create_line(x1,y1,x2,y2,fill='blue',width=2)

Point = namedtuple('Point', ['x', 'y'])


class NNVisualizer():
    
    def __init__(self):
        # Create the main window
        self.root = tk.Tk()
        self.root.title("NNVisualizer")

        #Dimensions of the Canvas
        self.canvas_width = 800
        self.canvas_height = 600

        #Dimensions of test circles
        circle1 = Point(x=self.canvas_width // 2, y=self.canvas_height // 2 )
        circle2 = Point(x=100,y=100)
        # Create a canvas widget
        self.canvas = tk.Canvas(self.root, width=self.canvas_width, height=self.canvas_height, bg='white')
        self.canvas.pack()

        #add Circles
        self.insertNormCirc(circle2.x, circle2.y)
        self.insertDragCirc(circle1.x, circle1.y)
        self.insertLine(circle1.x,circle1.y,circle2.x,circle2.y)


    def insertDragCirc(self, x, y):
        # Create a draggable circle
        DraggableCircle(self.canvas, x, y, 50)

    def insertNormCirc(self, x, y):
        draw_circle(self.canvas, x , y, radius=30)

    def insertLine(self, x1, y1, x2, y2):
        draw_Line(self.canvas, x1, y1, x2, y2)

    def run(self):
        # Start the Tkinter event loop
        self.root.mainloop()



myNN = NNVisualizer()
myNN.run()
